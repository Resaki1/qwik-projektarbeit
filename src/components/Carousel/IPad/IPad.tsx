/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: DatSketch (https://sketchfab.com/DatSketch)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/ipad-mini-6-2021-f363c2b1c74a462588db184bd4fb024e
Title: IPad Mini 6 2021
*/
/** @jsxImportSource react */

import type * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import type { GLTF } from "three-stdlib";
import { qwikify$ } from "@builder.io/qwik-react";

type GLTFResult = GLTF & {
  nodes: {
    iPad_Mini_BaseColor_0: THREE.Mesh;
    iPad_Mini_BaseColorMatte_0: THREE.Mesh;
    iPad_Mini_CamGray_0: THREE.Mesh;
    iPad_Mini_SpeakerMic_0: THREE.Mesh;
    iPad_Mini_Flash_0: THREE.Mesh;
    iPad_Mini_Bezel_0: THREE.Mesh;
    iPad_Mini_CamGlass_0: THREE.Mesh;
    iPad_Mini_Cam1_0: THREE.Mesh;
    iPad_Mini_CamBlack_0: THREE.Mesh;
    iPad_Mini_Port_0: THREE.Mesh;
    iPad_Mini_Screen_0: THREE.Mesh;
    iPad_Mini_Lens_0: THREE.Mesh;
    iPad_Mini_BaseColorLogo_0: THREE.Mesh;
  };
  materials: {
    BaseColor: THREE.MeshStandardMaterial;
    BaseColorMatte: THREE.MeshStandardMaterial;
    CamGray: THREE.MeshStandardMaterial;
    SpeakerMic: THREE.MeshStandardMaterial;
    Flash: THREE.MeshStandardMaterial;
    Bezel: THREE.MeshStandardMaterial;
    CamGlass: THREE.MeshStandardMaterial;
    Cam1: THREE.MeshStandardMaterial;
    CamBlack: THREE.MeshStandardMaterial;
    Port: THREE.MeshStandardMaterial;
    Screen: THREE.MeshStandardMaterial;
    Lens: THREE.MeshStandardMaterial;
    BaseColorLogo: THREE.MeshStandardMaterial;
  };
};

export function IPad(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/assets/ipad_mini_6_2021.glb"
  ) as GLTFResult;
  return (
    <group
      {...props}
      dispose={null}
      position={[0, 0, 0]}
      rotation={[0, Math.PI, 0]}
      scale={5}
    >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.iPad_Mini_BaseColor_0.geometry}
        material={materials.BaseColor}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.iPad_Mini_BaseColorMatte_0.geometry}
        material={materials.BaseColorMatte}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.iPad_Mini_CamGray_0.geometry}
        material={materials.CamGray}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.iPad_Mini_SpeakerMic_0.geometry}
        material={materials.SpeakerMic}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.iPad_Mini_Flash_0.geometry}
        material={materials.Flash}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.iPad_Mini_Bezel_0.geometry}
        material={materials.Bezel}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.iPad_Mini_CamGlass_0.geometry}
        material={materials.CamGlass}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.iPad_Mini_Cam1_0.geometry}
        material={materials.Cam1}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.iPad_Mini_CamBlack_0.geometry}
        material={materials.CamBlack}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.iPad_Mini_Port_0.geometry}
        material={materials.Port}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.iPad_Mini_Screen_0.geometry}
        material={materials.Screen}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.iPad_Mini_Lens_0.geometry}
        material={materials.Lens}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.iPad_Mini_BaseColorLogo_0.geometry}
        material={materials.BaseColorLogo}
      />
    </group>
  );
}

useGLTF.preload("/assets/ipad_mini_6_2021.glb");

export const QIPad = qwikify$(IPad);
